# nginx/conf.d/chatty.conf

# upstream блок для Gunicorn (если у вас несколько инстансов Gunicorn или для удобства)
# Пока у нас один инстанс web_prod на порту 8000
upstream chatty_server {
  server web_prod:8000; # 'web_prod' - имя сервиса из docker-compose.prod.yml, 8000 - порт, который слушает Gunicorn
}

server {
    listen 80;
    # listen [::]:80; # Для IPv6, если нужно
    server_name chattyorange.eu www.chattyorange.eu; # <<< ЗАМЕНИТЕ НА ВАШ ДОМЕН(Ы)

    # Расположение для статических файлов
    location /static/ {
        alias /app/staticfiles/; # Путь к папке staticfiles внутри контейнера nginx, куда монтируется том static_volume_prod
                               # (Этот том наполняется web_prod при collectstatic)
        expires 1y; # Кэшируем статику надолго
        add_header Cache-Control "public";
    }

    # Расположение для медиа-файлов
    location /media/ {
        alias /app/media/; # Путь к папке media внутри контейнера nginx, куда монтируется том media_volume_prod
        expires 1y;
        add_header Cache-Control "public";
    }

    # Все остальные запросы проксируем на Gunicorn
    location / {
        proxy_pass http://chatty_server; # Имя upstream блока
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Host $http_host;
        proxy_redirect off;
        proxy_buffering on;
    }

    # Обработка ошибок (опционально, можно настроить кастомные страницы)
    # error_page 500 502 503 504 /50x.html;
    # location = /50x.html {
    #    root /usr/share/nginx/html; # или ваш путь к кастомным страницам ошибок
    # }

    # Дополнительные настройки безопасности (опционально)
    # add_header X-Content-Type-Options nosniff;
    # add_header X-XSS-Protection "1; mode=block";
    # add_header X-Frame-Options "DENY"; # или "SAMEORIGIN"
}

# Если будете настраивать HTTPS с Let's Encrypt, Certbot добавит сюда новую server секцию для порта 443
# или вы можете добавить ее вручную.

# <!-- TODO: Заменить yourdomain.com на реальный домен. -->
# <!-- TODO: Настроить HTTPS и редирект с HTTP на HTTPS. -->
# <!-- TODO: Проверить пути alias для статики и медиа, чтобы они соответствовали путям внутри контейнера nginx. -->
# <!--       Пути в Dockerfile.prod (где собирается статика) и в docker-compose.prod.yml (монтирование томов) должны быть согласованы. -->