# diagnostic_orange_assistant.py
# –ó–∞–ø—É—Å—Ç–∏—Ç–µ: python manage.py shell < diagnostic_orange_assistant.py

print("üîç –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê ORANGE ASSISTANT")
print("=" * 50)

# 1. –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
print("\n1. üìä –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö:")
try:
    from django.contrib.auth import get_user_model
    from posts.models import Post, Comment

    User = get_user_model()

    users_count = User.objects.count()
    posts_count = Post.objects.count()
    comments_count = Comment.objects.count()

    print(f"‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {users_count}")
    print(f"‚úÖ –ü–æ—Å—Ç–æ–≤: {posts_count}")
    print(f"‚úÖ –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤: {comments_count}")

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    print("\nüìã –°—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏:")
    for user in User.objects.all()[:5]:
        print(f"   - @{user.username} (ID: {user.id})")

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ—Å—Ç—ã
    print("\nüìã –°—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –ø–æ—Å—Ç—ã:")
    for post in Post.objects.all()[:5]:
        print(f"   - '{post.title}' –æ—Ç @{post.author.username}")

except Exception as e:
    print(f"‚ùå –û–®–ò–ë–ö–ê –¥–æ—Å—Ç—É–ø–∞ –∫ –ë–î: {e}")

# 2. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ—É–Ω–∫—Ü–∏–π –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞
print("\n2. ü§ñ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ—É–Ω–∫—Ü–∏–π –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞:")
try:
    from orange_assistant.ai_services import find_user_by_username, get_subscription_recommendations

    test_user_info = {
        'username': 'test_user',
        'user_id': 1,
        'is_authenticated': True
    }

    # –¢–µ—Å—Ç –ø–æ–∏—Å–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    print("\nüîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–∏—Å–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è...")
    try:
        result = find_user_by_username("Orange", test_user_info)
        print(f"‚úÖ –ü–æ–∏—Å–∫ 'Orange': {result[:100]}...")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–∏—Å–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {e}")

    # –¢–µ—Å—Ç –ø–æ–∏—Å–∫–∞ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–º —Å–ø–æ—Å–æ–±–æ–º (–∫–∞–∫ —Å–µ–π—á–∞—Å –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç)
    try:
        result = find_user_by_username("–ù–∞–π–¥–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è Orange", test_user_info)
        print(f"‚ùå –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –ø–æ–∏—Å–∫ '–ù–∞–π–¥–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è Orange': {result[:100]}...")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ –ø–æ–∏—Å–∫–∞: {e}")

    # –¢–µ—Å—Ç —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π
    print("\nüìù –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π...")
    try:
        result = get_subscription_recommendations(test_user_info)
        print(f"‚úÖ –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏: {result[:100]}...")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π: {e}")

except ImportError as e:
    print(f"‚ùå –û–®–ò–ë–ö–ê –∏–º–ø–æ—Ä—Ç–∞: {e}")

# 3. –ü—Ä–æ–≤–µ—Ä–∫–∞ views.py
print("\n3. üîß –ü—Ä–æ–≤–µ—Ä–∫–∞ views.py:")
try:
    from orange_assistant.views import ChatWithAIView

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É –∫–ª–∞—Å—Å–∞ –º–µ—Ç–æ–¥ handle_natural_language_query
    if hasattr(ChatWithAIView, 'handle_natural_language_query'):
        print("‚úÖ –ú–µ—Ç–æ–¥ handle_natural_language_query –Ω–∞–π–¥–µ–Ω")

        # –ü—Ä–æ–±—É–µ–º –≤—ã–∑–≤–∞—Ç—å –º–µ—Ç–æ–¥ –Ω–∞–ø—Ä—è–º—É—é
        view_instance = ChatWithAIView()
        test_result = view_instance.handle_natural_language_query(
            "–ù–∞–π–¥–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è Orange",
            {'username': 'test'}
        )
        print(f"‚úÖ –ü—Ä—è–º–æ–π –≤—ã–∑–æ–≤ –º–µ—Ç–æ–¥–∞: {test_result[:100]}...")

    else:
        print("‚ùå –ú–µ—Ç–æ–¥ handle_natural_language_query –ù–ï –ù–ê–ô–î–ï–ù!")
        print("   –ù—É–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –º–µ—Ç–æ–¥ –≤ views.py")

except Exception as e:
    print(f"‚ùå –û–®–ò–ë–ö–ê views.py: {e}")

# 4. –ü—Ä–æ–≤–µ—Ä–∫–∞ API endpoint
print("\n4. üåê –ü—Ä–æ–≤–µ—Ä–∫–∞ API:")
try:
    from django.test import Client
    from django.contrib.auth import get_user_model
    import json

    client = Client()

    # –¢–µ—Å—Ç–∏—Ä—É–µ–º API –Ω–∞–ø—Ä—è–º—É—é
    response = client.post('/assistant/api/chat/',
                           data=json.dumps({
                               'action_type': 'find_user_by_username',
                               'user_input': 'Orange',
                               'user_info': {'username': 'test'}
                           }),
                           content_type='application/json'
                           )

    print(f"üì° API —Å—Ç–∞—Ç—É—Å: {response.status_code}")
    if response.status_code == 200:
        data = response.json()
        print(f"‚úÖ API –æ—Ç–≤–µ—Ç: {data.get('response', '')[:100]}...")
    else:
        print(f"‚ùå API –æ—à–∏–±–∫–∞: {response.content}")

except Exception as e:
    print(f"‚ùå –û–®–ò–ë–ö–ê API: {e}")

# 5. –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö
print("\n5. üèóÔ∏è –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö:")
try:
    User = get_user_model()

    # –°–æ–∑–¥–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è Orange –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
    orange_user, created = User.objects.get_or_create(
        username='Orange',
        defaults={
            'email': 'orange@example.com',
            'first_name': 'Orange',
            'last_name': 'Assistant'
        }
    )

    if created:
        print("‚úÖ –°–æ–∑–¥–∞–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å Orange")
    else:
        print(f"‚ÑπÔ∏è –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å Orange —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç (ID: {orange_user.id})")

    # –°–æ–∑–¥–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è Alek –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
    alek_user, created = User.objects.get_or_create(
        username='Alek',
        defaults={
            'email': 'alek@example.com',
            'first_name': 'Alek',
            'last_name': 'User'
        }
    )

    if created:
        print("‚úÖ –°–æ–∑–¥–∞–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å Alek")
    else:
        print(f"‚ÑπÔ∏è –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å Alek —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç (ID: {alek_user.id})")

    # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –ø–æ—Å—Ç—ã
    test_posts = [
        {
            'title': 'QLED —Ç–µ–ª–µ–≤–∏–∑–æ—Ä—ã –∫–∏—Ç–∞–π—Å–∫–∏—Ö –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª–µ–π',
            'text': '–û–±–∑–æ—Ä –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã—Ö QLED —Ç–µ–ª–µ–≤–∏–∑–æ—Ä–æ–≤ –æ—Ç –∫–∏—Ç–∞–π—Å–∫–∏—Ö –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª–µ–π.',
            'author': orange_user
        },
        {
            'title': '–ü—É—Ç–µ—à–µ—Å—Ç–≤–∏—è –ø–æ –ï–≤—Ä–æ–ø–µ',
            'text': '–ú–æ–π –æ–ø—ã—Ç –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏–π –ø–æ –µ–≤—Ä–æ–ø–µ–π—Å–∫–∏–º —Å—Ç–æ–ª–∏—Ü–∞–º.',
            'author': alek_user
        }
    ]

    for post_data in test_posts:
        post, created = Post.objects.get_or_create(
            title=post_data['title'],
            defaults=post_data
        )
        if created:
            print(f"‚úÖ –°–æ–∑–¥–∞–Ω –ø–æ—Å—Ç: {post.title}")

except Exception as e:
    print(f"‚ùå –û–®–ò–ë–ö–ê —Å–æ–∑–¥–∞–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö: {e}")

print("\nüéØ –ò–¢–û–ì–ò –î–ò–ê–ì–ù–û–°–¢–ò–ö–ò:")
print("=" * 50)
print("–ï—Å–ª–∏ –≤–∏–¥–∏—Ç–µ –æ—à–∏–±–∫–∏ –≤—ã—à–µ, —ç—Ç–æ –∏—Å—Ç–æ—á–Ω–∏–∫ –ø—Ä–æ–±–ª–µ–º—ã!")
print("–û—Å–Ω–æ–≤–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:")
print("1. ‚ùå –ú–µ—Ç–æ–¥ handle_natural_language_query –Ω–µ –æ–±–Ω–æ–≤–ª–µ–Ω –≤ views.py")
print("2. ‚ùå –ù–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö")
print("3. ‚ùå JavaScript –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ")
print("4. ‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç —Ç–µ—Å—Ç–æ–≤—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏")