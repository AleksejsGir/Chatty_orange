# Copyright 2024-2025 Aleksejs Giruckis, Igor Pronin, Viktor Yerokhov,
# Maxim Schneider, Ivan Miakinnov, Eugen Maljas
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.


import google.generativeai as genai
from django.conf import settings
from django.db.models import Count, Q
import logging
from datetime import datetime, timedelta
import json

# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –≤—Å–µ –º–æ–¥–µ–ª–∏ –≥–ª–æ–±–∞–ª—å–Ω–æ
from posts.models import Post, Comment
from users.models import CustomUser

# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –º–æ–¥–µ–ª—å –ø–æ–¥–ø–∏—Å–æ–∫
try:
    from subscriptions.models import Subscription
except ImportError:
    logger.error("–ú–æ–¥–µ–ª—å Subscription –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
    Subscription = None

logger = logging.getLogger(__name__)


def get_gemini_response(prompt: str) -> str:
    """
    –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∑–∞–ø—Ä–æ—Å –∫ Google Gemini API –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ç–µ–∫—Å—Ç–æ–≤—ã–π –æ—Ç–≤–µ—Ç.
    """
    api_key = settings.GOOGLE_API_KEY
    if not api_key:
        logger.error("GOOGLE_API_KEY –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω –≤ settings.py.")
        return "–û—à–∏–±–∫–∞: –ö–ª—é—á API –¥–ª—è —Å–µ—Ä–≤–∏—Å–∞ –ò–ò –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω."

    try:
        genai.configure(api_key=api_key)
        model = genai.GenerativeModel('gemini-2.0-flash')
        response = model.generate_content(prompt)
        if response.parts:
            return "".join(part.text for part in response.parts if hasattr(part, 'text'))
        elif hasattr(response, 'text') and response.text:
            return response.text
        else:
            if response.candidates and response.candidates[0].content and response.candidates[0].content.parts:
                return "".join(part.text for part in response.candidates[0].content.parts if hasattr(part, 'text'))
            return "–ò–ò –Ω–µ —Å–º–æ–≥ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –æ—Ç–≤–µ—Ç –≤ –æ–∂–∏–¥–∞–µ–º–æ–º —Ñ–æ—Ä–º–∞—Ç–µ."

    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–∏ —Å Gemini API: {e}")
        return f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞—â–µ–Ω–∏–∏ –∫ —Å–µ—Ä–≤–∏—Å—É –ò–ò. –ü–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏: {str(e)}"


def get_faq_answer(question: str, user_info: dict) -> str:
    """–û—Ç–≤–µ—á–∞–µ—Ç –Ω–∞ —á–∞—Å—Ç–æ –∑–∞–¥–∞–≤–∞–µ–º—ã–µ –≤–æ–ø—Ä–æ—Å—ã –æ —Å–∞–π—Ç–µ."""
    prompt = f"""–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_info.get('username', '–∞–Ω–æ–Ω–∏–º')} –∑–∞–¥–∞–µ—Ç –≤–æ–ø—Ä–æ—Å –æ —Å–∞–π—Ç–µ Chatty Orange: '{question}'. 

    Chatty Orange - —ç—Ç–æ —Å–æ—Ü–∏–∞–ª—å–Ω–∞—è —Å–µ—Ç—å —Å–æ —Å–ª–µ–¥—É—é—â–∏–º–∏ —Ñ—É–Ω–∫—Ü–∏—è–º–∏:
    - –°–æ–∑–¥–∞–Ω–∏–µ –ø–æ—Å—Ç–æ–≤ —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏ –∏ —Ç–µ–≥–∞–º–∏
    - –õ–∞–π–∫–∏ –∏ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –∫ –ø–æ—Å—Ç–∞–º
    - –°–∏—Å—Ç–µ–º–∞ –ø–æ–¥–ø–∏—Å–æ–∫ –Ω–∞ –¥—Ä—É–≥–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    - –ü–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –ª–µ–Ω—Ç–∞ –ø–æ—Å—Ç–æ–≤
    - –ü–æ–∏—Å–∫ –ø–æ –∫–æ–Ω—Ç–µ–Ω—Ç—É –∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º
    - –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø—Ä–æ—Ñ–∏–ª—è —Å –∞–≤–∞—Ç–∞—Ä–æ–º

    –û—Ç–≤–µ—Ç—å –Ω–∞ –≤–æ–ø—Ä–æ—Å –ø–æ–¥—Ä–æ–±–Ω–æ –∏ –¥—Ä—É–∂–µ–ª—é–±–Ω–æ. –ï—Å–ª–∏ –≤–æ–ø—Ä–æ—Å –Ω–µ –ø–æ —Ç–µ–º–µ —Å–∞–π—Ç–∞, –≤–µ–∂–ª–∏–≤–æ —É–∫–∞–∂–∏ –Ω–∞ —ç—Ç–æ."""
    return get_gemini_response(prompt)


def get_feature_explanation(feature_query: str, user_info: dict) -> str:
    """–û–±—ä—è—Å–Ω—è–µ—Ç, –∫–∞–∫ —Ä–∞–±–æ—Ç–∞—é—Ç —Ñ—É–Ω–∫—Ü–∏–∏ —Å–∞–π—Ç–∞, –∏–ª–∏ –æ–±—â–∏–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞."""

    user_name = user_info.get('username', '–∞–Ω–æ–Ω–∏–º')
    normalized_query = feature_query.lower()

    general_capability_keywords = [
        "—á—Ç–æ —Ç—ã —É–º–µ–µ—à—å", "—Ç–≤–æ–∏ —Ñ—É–Ω–∫—Ü–∏–∏", "–≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏",
        "—Ö–µ–ª–ø", "–ø–æ–º–æ—â—å", "—á—Ç–æ –º–æ–∂–µ—à—å", "—Ä–∞—Å—Å–∫–∞–∂–∏ –æ —Å–µ–±–µ", "–∫–æ–º–∞–Ω–¥—ã"
    ]

    is_general_query = any(keyword in normalized_query for keyword in general_capability_keywords)

    if is_general_query:
        prompt = f"""–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_name} —Å–ø—Ä–∞—à–∏–≤–∞–µ—Ç –æ —Ç–≤–æ–∏—Ö –æ–±—â–∏—Ö –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—è—Ö –∏–ª–∏ –ø—Ä–æ—Å–∏—Ç –ø–æ–º–æ—â–∏.
–†–∞—Å—Å–∫–∞–∂–∏ –æ —Å–µ–±–µ –∏ –æ—Å–Ω–æ–≤–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏—è—Ö —Å–∞–π—Ç–∞ Chatty Orange, –∫–æ—Ç–æ—Ä—ã–µ —Ç—ã –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—à—å.
Chatty Orange - —ç—Ç–æ —Å–æ—Ü–∏–∞–ª—å–Ω–∞—è —Å–µ—Ç—å, –≥–¥–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –º–æ–≥—É—Ç —Å–æ–∑–¥–∞–≤–∞—Ç—å –ø–æ—Å—Ç—ã, –∫–æ–º–º–µ–Ω—Ç–∏—Ä–æ–≤–∞—Ç—å, –ø–æ–¥–ø–∏—Å—ã–≤–∞—Ç—å—Å—è –Ω–∞ –¥—Ä—É–≥–∏—Ö –∏ —Ç.–¥.

–¢–≤–æ–∏ –æ—Å–Ω–æ–≤–Ω—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏:
- –û—Ç–≤–µ—Ç—ã –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã –æ —Å–∞–π—Ç–µ (FAQ).
- –û–±—ä—è—Å–Ω–µ–Ω–∏–µ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π —Å–∞–π—Ç–∞.
- –ü–æ–º–æ—â—å –≤ —Å–æ–∑–¥–∞–Ω–∏–∏ –ø–æ—Å—Ç–æ–≤ (–ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –∏–¥–µ–π, —Å–æ–≤–µ—Ç—ã –ø–æ —É–ª—É—á—à–µ–Ω–∏—é).
- –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã—Ö –∞–≤—Ç–æ—Ä–æ–≤ –¥–ª—è –ø–æ–¥–ø–∏—Å–∫–∏.
- –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–µ–∫—Å—Ç–∞ –ø–æ—Å—Ç–∞ –Ω–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ –ø—Ä–∞–≤–∏–ª–∞–º —Å–∞–π—Ç–∞.
- –ê–Ω–∞–ª–∏–∑ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –ø—Ä–æ—Ñ–∏–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ —Å–æ–≤–µ—Ç—ã –ø–æ –µ–≥–æ —Ä–∞–∑–≤–∏—Ç–∏—é.
- –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∏–¥–µ–π –¥–ª—è –Ω–æ–≤—ã—Ö –ø–æ—Å—Ç–æ–≤.
- –ê–Ω–∞–ª–∏–∑ —ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–≥–æ —Ç–æ–Ω–∞ —Ç–µ–∫—Å—Ç–∞.

–ö—Å—Ç–∞—Ç–∏, —è —Ç–∞–∫–∂–µ –Ω–µ–¥–∞–≤–Ω–æ –Ω–∞—É—á–∏–ª—Å—è –Ω–æ–≤—ã–º —Ç—Ä—é–∫–∞–º:
- üïµÔ∏è **–ò—Å–∫–∞—Ç—å –ø–æ—Å—Ç—ã –ø–æ –∫–ª—é—á–µ–≤—ã–º —Å–ª–æ–≤–∞–º.** –ü—Ä–æ—Å—Ç–æ —Å–ø—Ä–æ—Å–∏: "–ù–∞–π–¥–∏ –ø–æ—Å—Ç—ã –ø—Ä–æ [–∫–ª—é—á–µ–≤–æ–µ —Å–ª–æ–≤–æ]". –ù–∞–ø—Ä–∏–º–µ—Ä: "–ù–∞–π–¥–∏ –ø–æ—Å—Ç—ã –ø—Ä–æ –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏—è".
- üìÑ **–ü–æ–∫–∞–∑—ã–≤–∞—Ç—å –¥–µ—Ç–∞–ª–∏ –ø–æ—Å—Ç–∞.** –ï—Å–ª–∏ –∑–Ω–∞–µ—à—å –Ω–∞–∑–≤–∞–Ω–∏–µ –ø–æ—Å—Ç–∞, —Å–ø—Ä–æ—Å–∏: "–†–∞—Å—Å–∫–∞–∂–∏ –æ –ø–æ—Å—Ç–µ [–Ω–∞–∑–≤–∞–Ω–∏–µ]".
- üë§ **–ù–∞—Ö–æ–¥–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.** –°–ø—Ä–æ—Å–∏: "–ù–∞–π–¥–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è [–∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è]". –ù–∞–ø—Ä–∏–º–µ—Ä: "–ù–∞–π–¥–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è admin".
- üìä **–ü–æ–∫–∞–∑—ã–≤–∞—Ç—å –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.** –°–ø—Ä–æ—Å–∏: "–ß—Ç–æ –Ω–æ–≤–æ–≥–æ —É [–∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è]?".

–ü—Ä–µ–¥—Å—Ç–∞–≤—å —ç—Ç—É –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –¥—Ä—É–∂–µ–ª—é–±–Ω–æ –∏ —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω–æ. –ü–æ–æ—â—Ä—è–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∑–∞–¥–∞–≤–∞—Ç—å –≤–æ–ø—Ä–æ—Å—ã.
"""
    else:
        prompt = f"""–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_name} —Å–ø—Ä–∞—à–∏–≤–∞–µ—Ç –æ —Ñ—É–Ω–∫—Ü–∏–∏ '{feature_query}' –Ω–∞ —Å–∞–π—Ç–µ Chatty Orange. 

        –ü–æ–¥—Ä–æ–±–Ω–æ –æ–±—ä—è—Å–Ω–∏:
        1. –ß—Ç–æ —ç—Ç–æ –∑–∞ —Ñ—É–Ω–∫—Ü–∏—è.
        2. –ö–∞–∫ –µ—é –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è (–ø–æ—à–∞–≥–æ–≤–æ).
        3. –ö–∞–∫–∏–µ –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞ –æ–Ω–∞ –¥–∞–µ—Ç.
        4. –ü–æ–ª–µ–∑–Ω—ã–µ —Å–æ–≤–µ—Ç—ã –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é.

        –ï—Å–ª–∏ —Ñ—É–Ω–∫—Ü–∏—è '{feature_query}' –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–∞ –∏–ª–∏ –Ω–µ —è–≤–ª—è–µ—Ç—Å—è —Å–ø–µ—Ü–∏—Ñ–∏—á–µ—Å–∫–æ–π —Ñ—É–Ω–∫—Ü–∏–µ–π —Å–∞–π—Ç–∞, –Ω–æ —Ç—ã –º–æ–∂–µ—à—å –ø–æ–º–æ—á—å —Å —ç—Ç–∏–º –∑–∞–ø—Ä–æ—Å–æ–º (–Ω–∞–ø—Ä–∏–º–µ—Ä, —ç—Ç–æ –æ–±—â–∏–π –≤–æ–ø—Ä–æ—Å –∏–ª–∏ –ø—Ä–æ—Å—å–±–∞), –æ—Ç–≤–µ—Ç—å –Ω–∞–∏–ª—É—á—à–∏–º –æ–±—Ä–∞–∑–æ–º. 
        –ï—Å–ª–∏ —ç—Ç–æ –ø–æ—Ö–æ–∂–µ –Ω–∞ –∑–∞–ø—Ä–æ—Å –æ–¥–Ω–æ–π –∏–∑ —Ç–≤–æ–∏—Ö —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã—Ö –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π (–Ω–∞–ø—Ä–∏–º–µ—Ä, –ø–æ–∏—Å–∫ –ø–æ—Å—Ç–æ–≤, –∞–Ω–∞–ª–∏–∑ —Ç–µ–∫—Å—Ç–∞), –≤—ã–ø–æ–ª–Ω–∏ –µ–≥–æ.
        –ï—Å–ª–∏ —ç—Ç–æ —Å–æ–≤–µ—Ä—à–µ–Ω–Ω–æ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –∑–∞–ø—Ä–æ—Å, –≤–µ–∂–ª–∏–≤–æ —Å–æ–æ–±—â–∏, —á—Ç–æ —Ç—ã –Ω–µ –º–æ–∂–µ—à—å –ø–æ–º–æ—á—å —Å —ç—Ç–æ–π –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π —Ç–µ–º–æ–π, –Ω–æ –≥–æ—Ç–æ–≤ –ø–æ–º–æ—á—å —Å –¥—Ä—É–≥–∏–º–∏ –≤–æ–ø—Ä–æ—Å–∞–º–∏ –æ Chatty Orange."""

    return get_gemini_response(prompt)


def get_interactive_tour_step(step_number: int, user_info: dict) -> str:
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫–æ–Ω—Ç–µ–Ω—Ç –¥–ª—è —à–∞–≥–∞ –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–≥–æ —Ç—É—Ä–∞."""
    tour_steps = {
        1: {
            "title": "üéâ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ Chatty Orange!",
            "content": """–ü—Ä–∏–≤–µ—Ç! –Ø —Ç–≤–æ–π –ê–ø–µ–ª—å—Å–∏–Ω–æ–≤—ã–π –ü–æ–º–æ—â–Ω–∏–∫ üçä

            Chatty Orange - —ç—Ç–æ —É—é—Ç–Ω–∞—è —Å–æ—Ü–∏–∞–ª—å–Ω–∞—è —Å–µ—Ç—å, –≥–¥–µ —Ç—ã –º–æ–∂–µ—à—å:
            ‚Ä¢ –î–µ–ª–∏—Ç—å—Å—è –º—ã—Å–ª—è–º–∏ –∏ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è–º–∏
            ‚Ä¢ –ù–∞—Ö–æ–¥–∏—Ç—å –¥—Ä—É–∑–µ–π –ø–æ –∏–Ω—Ç–µ—Ä–µ—Å–∞–º
            ‚Ä¢ –û–±—â–∞—Ç—å—Å—è –≤ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è—Ö
            ‚Ä¢ –°–ª–µ–¥–∏—Ç—å –∑–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è–º–∏ –ª—é–±–∏–º—ã—Ö –∞–≤—Ç–æ—Ä–æ–≤

            –ì–æ—Ç–æ–≤ —É–∑–Ω–∞—Ç—å –±–æ–ª—å—à–µ? –ù–∞–∂–º–∏ "–î–∞–ª–µ–µ"!"""
        },
        2: {
            "title": "‚úçÔ∏è –°–æ–∑–¥–∞–Ω–∏–µ –ø–æ—Å—Ç–æ–≤",
            "content": """–ß—Ç–æ–±—ã —Å–æ–∑–¥–∞—Ç—å —Å–≤–æ–π –ø–µ—Ä–≤—ã–π –ø–æ—Å—Ç:

            1. –ù–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É "–°–æ–∑–¥–∞—Ç—å –ø–æ—Å—Ç" –≤ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
            2. –ù–∞–ø–∏—à–∏ —á—Ç–æ-–Ω–∏–±—É–¥—å –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ–µ
            3. –î–æ–±–∞–≤—å —Ñ–æ—Ç–æ (–¥–æ 10 —à—Ç—É–∫!)
            4. –í—ã–±–µ—Ä–∏ –ø–æ–¥—Ö–æ–¥—è—â–∏–µ —Ç–µ–≥–∏
            5. –ù–∞–∂–º–∏ "–û–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å"

            üí° –°–æ–≤–µ—Ç: –Ø –º–æ–≥—É –ø–æ–º–æ—á—å —Å –∏–¥–µ—è–º–∏ –¥–ª—è –ø–æ—Å—Ç–∞!"""
        },
        3: {
            "title": "üí¨ –í–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ",
            "content": """–ö–∞–∫ –æ–±—â–∞—Ç—å—Å—è –Ω–∞ Chatty Orange:

            üëç –õ–∞–π–∫–∏ - –Ω–∞–∂–º–∏ –Ω–∞ –ø–∞–ª–µ—Ü –≤–≤–µ—Ä—Ö –ø–æ–¥ –ø–æ—Å—Ç–æ–º
            üí¨ –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ - –ø–æ–¥–µ–ª–∏—Å—å –º–Ω–µ–Ω–∏–µ–º
            üîÑ –ü–æ–¥–ø–∏—Å–∫–∏ - —Å–ª–µ–¥–∏ –∑–∞ –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–º–∏ –∞–≤—Ç–æ—Ä–∞–º–∏
            üì∞ –õ–µ–Ω—Ç–∞ - –≤—Å–µ –ø–æ—Å—Ç—ã –æ—Ç —Ç–≤–æ–∏—Ö –ø–æ–¥–ø–∏—Å–æ–∫

            –ß–µ–º –∞–∫—Ç–∏–≤–Ω–µ–µ —Ç—ã —É—á–∞—Å—Ç–≤—É–µ—à—å, —Ç–µ–º –∏–Ω—Ç–µ—Ä–µ—Å–Ω–µ–µ —Å—Ç–∞–Ω–æ–≤–∏—Ç—Å—è!"""
        },
        4: {
            "title": "üéØ –ü–æ–ª–µ–∑–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏",
            "content": """–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏:

            üîç –ü–æ–∏—Å–∫ - –Ω–∞–π–¥–∏ –ø–æ—Å—Ç—ã –∏ –ª—é–¥–µ–π –ø–æ –∏–Ω—Ç–µ—Ä–µ—Å–∞–º
            üè∑Ô∏è –¢–µ–≥–∏ - —Ñ–∏–ª—å—Ç—Ä—É–π –∫–æ–Ω—Ç–µ–Ω—Ç –ø–æ —Ç–µ–º–∞–º
            üë§ –ü—Ä–æ—Ñ–∏–ª—å - –Ω–∞—Å—Ç—Ä–æ–π –∞–≤–∞—Ç–∞—Ä –∏ –æ–ø–∏—Å–∞–Ω–∏–µ
            üçä –Ø, —Ç–≤–æ–π –ø–æ–º–æ—â–Ω–∏–∫ - –≤—Å–µ–≥–¥–∞ –≥–æ—Ç–æ–≤ –ø–æ–º–æ—á—å!

            –ü–æ–∑–¥—Ä–∞–≤–ª—è—é! –¢–µ–ø–µ—Ä—å —Ç—ã –≥–æ—Ç–æ–≤ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é Chatty Orange! üéâ"""
        }
    }

    step_data = tour_steps.get(step_number, tour_steps[4])
    content_html = step_data['content'].replace('\n', '<br>')
    return f"<h5>{step_data['title']}</h5><p>{content_html}</p>"


def get_post_creation_suggestion(current_text: str, user_info: dict) -> str:
    """–ü–æ–º–æ–≥–∞–µ—Ç —Å —Å–æ–∑–¥–∞–Ω–∏–µ–º –ø–æ—Å—Ç–∞."""
    if not current_text:
        prompt = f"""–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_info.get('username', '–ê–Ω–æ–Ω–∏–º')} —Å–æ–∑–¥–∞–µ—Ç —Å–≤–æ–π –ø–µ—Ä–≤—ã–π –ø–æ—Å—Ç –Ω–∞ Chatty Orange.

        –ü—Ä–µ–¥–ª–æ–∂–∏ 5 –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã—Ö –∏–¥–µ–π –¥–ª—è –ø–µ—Ä–≤–æ–≥–æ –ø–æ—Å—Ç–∞ –≤ —Ñ–æ—Ä–º–∞—Ç–µ:

        üåü **–ò–¥–µ—è 1: [–ù–∞–∑–≤–∞–Ω–∏–µ]**
        [–ö—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –∏ –ø—Ä–∏–º–µ—Ä –Ω–∞—á–∞–ª–∞ –ø–æ—Å—Ç–∞]

        –ò–¥–µ–∏ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å —Ä–∞–∑–Ω–æ–æ–±—Ä–∞–∑–Ω—ã–º–∏: –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ, —Ö–æ–±–±–∏, –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–π —Ñ–∞–∫—Ç, –≤–æ–ø—Ä–æ—Å —Å–æ–æ–±—â–µ—Å—Ç–≤—É, —Ñ–æ—Ç–æ-–∏—Å—Ç–æ—Ä–∏—è."""
    else:
        prompt = f"""–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_info.get('username', '–ê–Ω–æ–Ω–∏–º')} –ø–∏—à–µ—Ç –ø–æ—Å—Ç:
        "{current_text}"

        –î–∞–π –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–∏–≤–Ω—ã–µ —Å–æ–≤–µ—Ç—ã:
        1. –ß—Ç–æ –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –∏–ª–∏ —É–ª—É—á—à–∏—Ç—å
        2. –ö–∞–∫–∏–µ —Ç–µ–≥–∏ –ø–æ–¥–æ–π–¥—É—Ç
        3. –ü—Ä–µ–¥–ª–æ–∂–∏ –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ–µ –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏–µ

        –ë—É–¥—å –¥—Ä—É–∂–µ–ª—é–±–Ω—ã–º –∏ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—â–∏–º!"""

    return get_gemini_response(prompt)


def find_post_by_keyword(keyword: str, user_info: dict) -> str:
    """
    –ò—â–µ—Ç –ø–æ—Å—Ç—ã –ø–æ –∫–ª—é—á–µ–≤–æ–º—É —Å–ª–æ–≤—É –∏ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è–µ—Ç –∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –±–µ–∑ ID.
    """
    logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_info.get('username', '–∞–Ω–æ–Ω–∏–º')} –∏—â–µ—Ç –ø–æ—Å—Ç—ã —Å –∫–ª—é—á–µ–≤—ã–º —Å–ª–æ–≤–æ–º: '{keyword}'")
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –º–æ–¥–µ–ª—å Post –¥–æ—Å—Ç—É–ø–Ω–∞
        if Post is None:
            logger.error("–ú–æ–¥–µ–ª—å Post –Ω–µ –¥–æ—Å—Ç—É–ø–Ω–∞")
            return "–û—à–∏–±–∫–∞: –º–æ–¥–µ–ª—å –ø–æ—Å—Ç–æ–≤ –Ω–µ –¥–æ—Å—Ç—É–ø–Ω–∞. –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É."

        # –í—ã–ø–æ–ª–Ω—è–µ–º –ø–æ–∏—Å–∫
        posts = Post.objects.filter(Q(title__icontains=keyword) | Q(text__icontains=keyword))[:10]

        logger.info(f"–ù–∞–π–¥–µ–Ω–æ {posts.count()} –ø–æ—Å—Ç–æ–≤ –ø–æ –∫–ª—é—á–µ–≤–æ–º—É —Å–ª–æ–≤—É '{keyword}'")

        if not posts.exists():
            logger.info(f"–ü–æ—Å—Ç—ã —Å –∫–ª—é—á–µ–≤—ã–º —Å–ª–æ–≤–æ–º '{keyword}' –Ω–µ –Ω–∞–π–¥–µ–Ω—ã.")
            return f"–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –ø–æ—Å—Ç—ã —Å –∫–ª—é—á–µ–≤—ã–º —Å–ª–æ–≤–æ–º '{keyword}' –Ω–µ –Ω–∞–π–¥–µ–Ω—ã. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –¥—Ä—É–≥–æ–π –∑–∞–ø—Ä–æ—Å."

        posts_info = []
        for post in posts:
            author_username = post.author.username if post.author else "–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –∞–≤—Ç–æ—Ä"
            try:
                post_url = post.get_absolute_url() if hasattr(post, 'get_absolute_url') else f"/posts/{post.id}/"
            except Exception as e:
                logger.warning(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ URL –ø–æ—Å—Ç–∞ {post.id}: {e}")
                post_url = f"/posts/{post.id}/"

            # –ò–°–ü–†–ê–í–õ–ï–ù–û: –í–æ–∑–≤—Ä–∞—â–∞–µ–º —á–∏—Å—Ç—ã–π —Ç–µ–∫—Å—Ç –ë–ï–ó HTML-—Ç–µ–≥–æ–≤
            # JavaScript formatMessage —Å–∞–º —Å–æ–∑–¥–∞—Å—Ç —Å—Å—ã–ª–∫–∏
            posts_info.append(
                f"‚Ä¢ **{post.title}** –æ—Ç @{author_username}\n  –°—Å—ã–ª–∫–∞: {post_url}")

        posts_details_str = "\n\n".join(posts_info)

        return f"""üîç **–ù–∞–π–¥–µ–Ω–Ω—ã–µ –ø–æ—Å—Ç—ã –ø–æ –∑–∞–ø—Ä–æ—Å—É "{keyword}":**

{posts_details_str}

üí° –ù–∞–∂–º–∏ –Ω–∞ —Å—Å—ã–ª–∫—É, —á—Ç–æ–±—ã –ø—Ä–æ—á–∏—Ç–∞—Ç—å –ø–æ—Å—Ç –ø–æ–ª–Ω–æ—Å—Ç—å—é!"""

    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ –ø–æ—Å—Ç–æ–≤ –ø–æ –∫–ª—é—á–µ–≤–æ–º—É —Å–ª–æ–≤—É '{keyword}': {e}")
        return f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ –ø–æ—Å—Ç–æ–≤: {str(e)} üçä"


def get_post_details(post_id: int, user_info: dict) -> str:
    """
    –ü–æ–ª—É—á–∞–µ—Ç –¥–µ—Ç–∞–ª–∏ –ø–æ—Å—Ç–∞ –ø–æ –µ–≥–æ ID –∏ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è–µ—Ç –∏—Ö –±–µ–∑ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏—Ö –ø–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–µ–π.
    """
    logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_info.get('username', '–∞–Ω–æ–Ω–∏–º')} –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç –¥–µ—Ç–∞–ª–∏ –ø–æ—Å—Ç–∞ —Å ID: {post_id}")
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å –º–æ–¥–µ–ª–µ–π
        if Post is None:
            return "–û—à–∏–±–∫–∞: –º–æ–¥–µ–ª—å –ø–æ—Å—Ç–æ–≤ –Ω–µ –¥–æ—Å—Ç—É–ø–Ω–∞."

        if Comment is None:
            return "–û—à–∏–±–∫–∞: –º–æ–¥–µ–ª—å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤ –Ω–µ –¥–æ—Å—Ç—É–ø–Ω–∞."

        post = Post.objects.get(pk=post_id)
        author_username = post.author.username if post.author else "–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –∞–≤—Ç–æ—Ä"
        likes_count = post.likes.count() if hasattr(post, 'likes') else 0

        comments = Comment.objects.filter(post=post).order_by('-created_at')[:5]
        comments_info = []
        if comments:
            for comment in comments:
                comment_author = comment.author.username if comment.author else "–∞–Ω–æ–Ω–∏–º"
                comments_info.append(
                    f"üí¨ @{comment_author}: {comment.text[:100]}{'...' if len(comment.text) > 100 else ''}")
        else:
            comments_info.append("–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤ –ø–æ–∫–∞ –Ω–µ—Ç.")

        comments_details_str = "\n".join(comments_info)

        # –ò–°–ü–†–ê–í–õ–ï–ù–û: –£–±–∏—Ä–∞–µ–º HTML-—Ç–µ–≥–∏, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º —á–∏—Å—Ç—ã–π —Ç–µ–∫—Å—Ç
        # JavaScript formatMessage —Å–∞–º —Å–æ–∑–¥–∞—Å—Ç —Å—Å—ã–ª–∫–∏ –∏–∑ @username
        post_details = f"""
üì∞ **{post.title}**
‚úçÔ∏è –ê–≤—Ç–æ—Ä: @{author_username}
üëç –õ–∞–π–∫–æ–≤: {likes_count}

üìù **–°–æ–¥–µ—Ä–∂–∞–Ω–∏–µ:**
{post.text[:500]}{'...' if len(post.text) > 500 else ''} 

üí¨ **–ü–æ—Å–ª–µ–¥–Ω–∏–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏:**
{comments_details_str}
        """

        logger.info(f"–£—Å–ø–µ—à–Ω–æ –ø–æ–ª—É—á–µ–Ω—ã –¥–µ—Ç–∞–ª–∏ –¥–ª—è –ø–æ—Å—Ç–∞: {post.title}")

        return f"üéØ **–í–æ—Ç —á—Ç–æ —è –Ω–∞—à–µ–ª:**{post_details}\n\nüí° –•–æ—á–µ—à—å –æ—Å—Ç–∞–≤–∏—Ç—å —Å–≤–æ–π –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –∏–ª–∏ –ø–æ—Å—Ç–∞–≤–∏—Ç—å –ª–∞–π–∫? –ü–µ—Ä–µ—Ö–æ–¥–∏ –∫ –ø–æ—Å—Ç—É!"

    except Post.DoesNotExist:
        logger.warning(f"–ü–æ—Å—Ç —Å ID {post_id} –Ω–µ –Ω–∞–π–¥–µ–Ω.")
        return f"–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –ø–æ—Å—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω. –í–æ–∑–º–æ–∂–Ω–æ, –æ–Ω –±—ã–ª —É–¥–∞–ª–µ–Ω."
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–µ—Ç–∞–ª–µ–π –ø–æ—Å—Ç–∞ ID {post_id}: {e}")
        return f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –¥–µ—Ç–∞–ª–µ–π –ø–æ—Å—Ç–∞: {str(e)} üçä"


def find_user_by_username(username: str, user_info: dict) -> str:
    """
    –ò—â–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ –∏–º–µ–Ω–∏ –∏ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è–µ—Ç –µ–≥–æ –ø—Ä–æ—Ñ–∏–ª—å.
    """
    logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_info.get('username', '–∞–Ω–æ–Ω–∏–º')} –∏—â–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: '{username}'")
    try:
        if CustomUser is None:
            return "–û—à–∏–±–∫–∞: –º–æ–¥–µ–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –Ω–µ –¥–æ—Å—Ç—É–ø–Ω–∞."

        found_user = CustomUser.objects.get(username__iexact=username)

        # –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        posts_count = Post.objects.filter(author=found_user).count() if Post else 0

        # –ë–µ–∑–æ–ø–∞—Å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤
        subscribers_count = 0
        if Subscription and hasattr(found_user, 'subscribers'):
            try:
                subscribers_count = found_user.subscribers.count()
            except Exception as e:
                logger.warning(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥—Å—á–µ—Ç–µ –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤: {e}")

        # –ü–æ–ª—É—á–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–π –ø–æ—Å—Ç –¥–ª—è –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞
        last_post_info = "–ï—â–µ –Ω–µ —Å–æ–∑–¥–∞–≤–∞–ª –ø–æ—Å—Ç–æ–≤"
        if Post:
            try:
                last_post = Post.objects.filter(author=found_user).order_by('-pub_date').first()
                if last_post:
                    last_post_info = f"–ü–æ—Å–ª–µ–¥–Ω–∏–π –ø–æ—Å—Ç: \"{last_post.title}\""
            except Exception:
                last_post_info = "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ—Å—Ç–∞—Ö –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞"

        user_bio = found_user.bio if hasattr(found_user,
                                             'bio') and found_user.bio else "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–æ–∫–∞ –Ω–∏—á–µ–≥–æ –Ω–µ —Ä–∞—Å—Å–∫–∞–∑–∞–ª –æ —Å–µ–±–µ."

        logger.info(
            f"–ù–∞–π–¥–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: @{found_user.username}. –ü–æ—Å—Ç–æ–≤: {posts_count}, –ü–æ–¥–ø–∏—Å—á–∏–∫–æ–≤: {subscribers_count}")

        return f"""üë§ **–ù–∞–π–¥–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å @{found_user.username}!**

üìù **–û —Å–µ–±–µ:** {user_bio}

üìä **–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:**
‚Ä¢ –ü–æ—Å—Ç–æ–≤: {posts_count}
‚Ä¢ –ü–æ–¥–ø–∏—Å—á–∏–∫–æ–≤: {subscribers_count}

üì∞ {last_post_info}

üí° –•–æ—á–µ—à—å –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ —ç—Ç–æ–≥–æ –∞–≤—Ç–æ—Ä–∞? –ü–µ—Ä–µ–π–¥–∏ –≤ –µ–≥–æ –ø—Ä–æ—Ñ–∏–ª—å @{found_user.username}!"""

    except CustomUser.DoesNotExist:
        logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å –∏–º–µ–Ω–µ–º '{username}' –Ω–µ –Ω–∞–π–¥–µ–Ω.")
        return f"–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å –∏–º–µ–Ω–µ–º '{username}' –Ω–µ –Ω–∞–π–¥–µ–Ω. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –Ω–∞–ø–∏—Å–∞–Ω–∏—è –∏–º–µ–Ω–∏."
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è '{username}': {e}")
        return f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {str(e)} üçä"


def get_user_activity(user_id: int, user_info: dict) -> str:
    """
    –ü–æ–ª—É—á–∞–µ—Ç –ø–æ—Å–ª–µ–¥–Ω—é—é –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –±–µ–∑ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏—Ö –¥–µ—Ç–∞–ª–µ–π.
    """
    requesting_user_info = user_info.get('username', '–∞–Ω–æ–Ω–∏–º')
    logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {requesting_user_info} –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å ID: {user_id}")

    try:
        if CustomUser is None:
            return "–û—à–∏–±–∫–∞: –º–æ–¥–µ–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –Ω–µ –¥–æ—Å—Ç—É–ø–Ω–∞."

        target_user = CustomUser.objects.get(pk=user_id)
        target_username = target_user.username

        # –ü–æ—Å–ª–µ–¥–Ω–∏–µ 3 –ø–æ—Å—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        posts_info_list = []
        if Post:
            latest_posts = Post.objects.filter(author=target_user).order_by('-pub_date')[:3]
            if latest_posts:
                for post in latest_posts:
                    try:
                        post_url = post.get_absolute_url() if hasattr(post,
                                                                      'get_absolute_url') else f"/posts/{post.id}/"
                    except Exception:
                        post_url = f"/posts/{post.id}/"
                    posts_info_list.append(f"üìù **{post.title}**\n–°—Å—ã–ª–∫–∞: {post_url}")
            else:
                posts_info_list.append("üìù –ù–µ–¥–∞–≤–Ω–∏—Ö –ø–æ—Å—Ç–æ–≤ –Ω–µ—Ç.")
        else:
            posts_info_list.append("üìù –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ—Å—Ç–∞—Ö –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞.")

        posts_activity_str = "\n\n".join(posts_info_list)

        # –ü–æ—Å–ª–µ–¥–Ω–∏–µ 3 –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        comments_info_list = []
        if Comment:
            latest_comments = Comment.objects.filter(author=target_user).order_by('-created_at')[:3]
            if latest_comments:
                for comment in latest_comments:
                    try:
                        comment_post_url = comment.post.get_absolute_url() if comment.post and hasattr(comment.post,
                                                                                                       'get_absolute_url') else f"/posts/{comment.post.id}/" if comment.post else "URL –ø–æ—Å—Ç–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
                    except Exception:
                        comment_post_url = f"/posts/{comment.post.id}/" if comment.post else "URL –ø–æ—Å—Ç–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
                    comments_info_list.append(
                        f"üí¨ –ü—Ä–æ–∫–æ–º–º–µ–Ω—Ç–∏—Ä–æ–≤–∞–ª: \"{comment.text[:60]}{'...' if len(comment.text) > 60 else ''}\"\n–°—Å—ã–ª–∫–∞: {comment_post_url}")
            else:
                comments_info_list.append("üí¨ –ù–µ–¥–∞–≤–Ω–∏—Ö –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤ –Ω–µ—Ç.")
        else:
            comments_info_list.append("üí¨ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è—Ö –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞.")

        comments_activity_str = "\n\n".join(comments_info_list)

        logger.info(f"–£—Å–ø–µ—à–Ω–æ –ø–æ–ª—É—á–µ–Ω–∞ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è @{target_username} (ID: {user_id}).")

        return f"""üìä **–ü–æ—Å–ª–µ–¥–Ω—è—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å @{target_username}:**

**–ù–µ–¥–∞–≤–Ω–∏–µ –ø–æ—Å—Ç—ã:**
{posts_activity_str}

**–ù–µ–¥–∞–≤–Ω–∏–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏:**
{comments_activity_str}

üí° –ù–∞–∂–º–∏ –Ω–∞ —Å—Å—ã–ª–∫–∏, —á—Ç–æ–±—ã –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø–æ—Å—Ç—ã –∏–ª–∏ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏!"""

    except CustomUser.DoesNotExist:
        logger.warning(f"–ó–∞–ø—Ä–æ—à–µ–Ω–∞ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –¥–ª—è –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å ID {user_id}.")
        return f"–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω."
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ID {user_id}: {e}")
        return f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {str(e)} üçä"


def get_subscription_recommendations(user_info: dict, current_user_id: int = None) -> str:
    """–†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã—Ö –∞–≤—Ç–æ—Ä–æ–≤ –¥–ª—è –ø–æ–¥–ø–∏—Å–∫–∏ —Å –±–æ–ª–µ–µ –¥—Ä—É–∂–µ–ª—é–±–Ω—ã–º —Ñ–æ—Ä–º–∞—Ç–æ–º."""
    logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_info.get('username', '–∞–Ω–æ–Ω–∏–º')} –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ–¥–ø–∏—Å–æ–∫")

    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å –º–æ–¥–µ–ª–µ–π
        if CustomUser is None:
            logger.error("–ú–æ–¥–µ–ª—å CustomUser –Ω–µ –¥–æ—Å—Ç—É–ø–Ω–∞")
            return "–û—à–∏–±–∫–∞: –º–æ–¥–µ–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –Ω–µ –¥–æ—Å—Ç—É–ø–Ω–∞."

        if Post is None:
            logger.error("–ú–æ–¥–µ–ª—å Post –Ω–µ –¥–æ—Å—Ç—É–ø–Ω–∞")
            return "–û—à–∏–±–∫–∞: –º–æ–¥–µ–ª—å –ø–æ—Å—Ç–æ–≤ –Ω–µ –¥–æ—Å—Ç—É–ø–Ω–∞."

        # –ü–æ–ª—É—á–∞–µ–º –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö –∞–≤—Ç–æ—Ä–æ–≤
        recommended_users = CustomUser.objects.annotate(
            num_posts=Count('post')
        ).filter(
            num_posts__gt=0
        ).order_by('-num_posts')

        # –ò—Å–∫–ª—é—á–∞–µ–º —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        if current_user_id:
            recommended_users = recommended_users.exclude(id=current_user_id)

            # –ï—Å–ª–∏ –º–æ–¥–µ–ª—å –ø–æ–¥–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω–∞, –∏—Å–∫–ª—é—á–∞–µ–º —Ç–µ—Ö, –Ω–∞ –∫–æ–≥–æ —É–∂–µ –ø–æ–¥–ø–∏—Å–∞–Ω
            if Subscription:
                try:
                    user = CustomUser.objects.get(id=current_user_id)
                    subscribed_ids = Subscription.objects.filter(subscriber=user).values_list('target_id', flat=True)
                    recommended_users = recommended_users.exclude(id__in=subscribed_ids)
                except Exception as e:
                    logger.warning(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∏—Å–∫–ª—é—á–µ–Ω–∏–∏ –ø–æ–¥–ø–∏—Å–æ–∫: {e}")

        recommended_users = recommended_users[:5]

        if not recommended_users:
            logger.info("–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
            return "üçä –ü–æ–∫–∞ —á—Ç–æ –º–∞–ª–æ –∞–∫—Ç–∏–≤–Ω—ã—Ö –∞–≤—Ç–æ—Ä–æ–≤, –Ω–æ —Å–∫–æ—Ä–æ –∏—Ö —Å—Ç–∞–Ω–µ—Ç –±–æ–ª—å—à–µ! –ê –ø–æ–∫–∞ —Å–æ–∑–¥–∞–π —Å–≤–æ–π –ø–µ—Ä–≤—ã–π –ø–æ—Å—Ç!"

        authors_info = []
        for user in recommended_users:
            # –ü–æ–ª—É—á–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–π –ø–æ—Å—Ç –¥–ª—è –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞
            try:
                last_post = Post.objects.filter(author=user).order_by('-pub_date').first()
                post_preview = f"–ü–æ—Å–ª–µ–¥–Ω–∏–π –ø–æ—Å—Ç: \"{last_post.title[:30]}...\"" if last_post else "–ï—â–µ –Ω–µ—Ç –ø–æ—Å—Ç–æ–≤"
            except Exception as e:
                logger.warning(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –ø–æ—Å—Ç–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user.username}: {e}")
                post_preview = "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ—Å—Ç–∞—Ö –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞"

            bio_info = ""
            if hasattr(user, 'bio') and user.bio:
                bio_info = f'üìù –û —Å–µ–±–µ: {user.bio[:80]}...'

            authors_info.append(f"""üî∏ **@{user.username}** ({user.num_posts} –ø–æ—Å—Ç–æ–≤)
{bio_info}
üì∞ {post_preview}""")

        recommendations = "\n\n".join(authors_info)
        logger.info(f"–°—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω—ã —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –¥–ª—è {len(authors_info)} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π")

        return f"""üåü **–†–µ–∫–æ–º–µ–Ω–¥—É—é –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ —ç—Ç–∏—Ö –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã—Ö –∞–≤—Ç–æ—Ä–æ–≤:**

{recommendations}

üí° **–°–æ–≤–µ—Ç:** –ü–æ–¥–ø–∏—Å—ã–≤–∞–π—Å—è –Ω–∞ –∞–≤—Ç–æ—Ä–æ–≤ —Å –ø–æ—Ö–æ–∂–∏–º–∏ –∏–Ω—Ç–µ—Ä–µ—Å–∞–º–∏, —á—Ç–æ–±—ã —Ç–≤–æ—è –ª–µ–Ω—Ç–∞ –±—ã–ª–∞ –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ–π!"""

    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π: {e}")
        return f"–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏: {str(e)} üçä"


def check_post_content(post_text: str, user_info: dict) -> str:
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Ç–µ–∫—Å—Ç –ø–æ—Å—Ç–∞ –Ω–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ –ø—Ä–∞–≤–∏–ª–∞–º."""
    if not post_text.strip():
        return "üìù –¢–µ–∫—Å—Ç –ø–æ—Å—Ç–∞ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º!"

    site_rules = """
    1. ‚ùå –ó–∞–ø—Ä–µ—â–µ–Ω—ã –æ—Å–∫–æ—Ä–±–ª–µ–Ω–∏—è, —É–≥—Ä–æ–∑—ã –∏ –∞–≥—Ä–µ—Å—Å–∏—è
    2. ‚ùå –ó–∞–ø—Ä–µ—â–µ–Ω –∫–æ–Ω—Ç–µ–Ω—Ç 18+, –Ω–∞—Å–∏–ª–∏–µ, —à–æ–∫-–∫–æ–Ω—Ç–µ–Ω—Ç
    3. ‚ùå –ó–∞–ø—Ä–µ—â–µ–Ω —Å–ø–∞–º –∏ –Ω–µ—Å–æ–≥–ª–∞—Å–æ–≤–∞–Ω–Ω–∞—è —Ä–µ–∫–ª–∞–º–∞
    4. ‚ùå –ó–∞–ø—Ä–µ—â–µ–Ω–æ —Ä–∞–∑–∂–∏–≥–∞–Ω–∏–µ –Ω–µ–Ω–∞–≤–∏—Å—Ç–∏
    5. ‚ùå –ó–∞–ø—Ä–µ—â–µ–Ω—ã –ø–æ–ª–∏—Ç–∏–∫–∞ –∏ —Ä–µ–ª–∏–≥–∏–æ–∑–Ω—ã–µ —Å–ø–æ—Ä—ã
    6. ‚úÖ –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ—Ç—Å—è –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç
    7. ‚úÖ –û—Å–Ω–æ–≤–Ω–æ–π —è–∑—ã–∫ - —Ä—É—Å—Å–∫–∏–π
    """

    prompt = f"""–ü—Ä–æ–≤–µ—Ä—å —Ç–µ–∫—Å—Ç –ø–æ—Å—Ç–∞ –æ—Ç {user_info.get('username', '–ê–Ω–æ–Ω–∏–º')}:
    "{post_text}"

    –ü—Ä–∞–≤–∏–ª–∞ Chatty Orange:
    {site_rules}

    –ï—Å–ª–∏ –≤—Å—ë —Ö–æ—Ä–æ—à–æ, –æ—Ç–≤–µ—Ç—å: "‚úÖ –û—Ç–ª–∏—á–Ω—ã–π –ø–æ—Å—Ç! –ú–æ–∂–Ω–æ –ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å!"

    –ï—Å–ª–∏ –µ—Å—Ç—å –Ω–∞—Ä—É—à–µ–Ω–∏—è:
    1. –£–∫–∞–∂–∏ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–µ –Ω–∞—Ä—É—à–µ–Ω–∏–µ
    2. –û–±—ä—è—Å–Ω–∏, –ø–æ—á–µ–º—É —ç—Ç–æ –Ω–∞—Ä—É—à–µ–Ω–∏–µ
    3. –ü—Ä–µ–¥–ª–æ–∂–∏, –∫–∞–∫ –∏—Å–ø—Ä–∞–≤–∏—Ç—å

    –ë—É–¥—å –¥—Ä—É–∂–µ–ª—é–±–Ω—ã–º –∏ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–∏–≤–Ω—ã–º!"""

    return get_gemini_response(prompt)


def analyze_profile_stats(user_id: int) -> str:
    """–ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø—Ä–æ—Ñ–∏–ª—è –∏ –¥–∞–µ—Ç —Å–æ–≤–µ—Ç—ã."""
    logger.info(f"–ê–Ω–∞–ª–∏–∑ –ø—Ä–æ—Ñ–∏–ª—è –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ID: {user_id}")

    try:
        if CustomUser is None:
            return "–û—à–∏–±–∫–∞: –º–æ–¥–µ–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –Ω–µ –¥–æ—Å—Ç—É–ø–Ω–∞."

        user = CustomUser.objects.get(id=user_id)

        # –°–æ–±–∏—Ä–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
        posts_count = Post.objects.filter(author=user).count() if Post else 0
        comments_count = Comment.objects.filter(author=user).count() if Comment else 0

        # –ü–æ–¥—Å—á–µ—Ç –ª–∞–π–∫–æ–≤
        likes_received = 0
        if Post:
            try:
                user_posts = Post.objects.filter(author=user)
                for post in user_posts:
                    if hasattr(post, 'likes'):
                        likes_received += post.likes.count()
            except Exception as e:
                logger.warning(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥—Å—á–µ—Ç–µ –ª–∞–π–∫–æ–≤: {e}")

        # –ü–æ–¥–ø–∏—Å–∫–∏
        subscribers_count = 0
        subscriptions_count = 0
        if Subscription:
            try:
                subscribers_count = Subscription.objects.filter(target=user).count()
                subscriptions_count = Subscription.objects.filter(subscriber=user).count()
            except Exception as e:
                logger.warning(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥—Å—á–µ—Ç–µ –ø–æ–¥–ø–∏—Å–æ–∫: {e}")

        # –î–Ω–∏ –Ω–∞ —Å–∞–π—Ç–µ
        days_on_site = 0
        if hasattr(user, 'date_joined'):
            days_on_site = (datetime.now().date() - user.date_joined.date()).days
        elif hasattr(user, 'created_at'):
            days_on_site = (datetime.now().date() - user.created_at.date()).days

        stats = {
            'posts_count': posts_count,
            'comments_count': comments_count,
            'likes_received': likes_received,
            'subscribers_count': subscribers_count,
            'subscriptions_count': subscriptions_count,
            'days_on_site': days_on_site
        }

        logger.info(f"–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –¥–ª—è @{user.username}: {stats}")

        prompt = f"""–ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è @{user.username} –Ω–∞ Chatty Orange:

        üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:
        - –î–Ω–µ–π –Ω–∞ —Å–∞–π—Ç–µ: {stats['days_on_site']}
        - –ü–æ—Å—Ç–æ–≤: {stats['posts_count']}
        - –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤: {stats['comments_count']}
        - –ü–æ–ª—É—á–µ–Ω–æ –ª–∞–π–∫–æ–≤: {stats['likes_received']}
        - –ü–æ–¥–ø–∏—Å—á–∏–∫–æ–≤: {stats['subscribers_count']}
        - –ü–æ–¥–ø–∏—Å–æ–∫: {stats['subscriptions_count']}

        –î–∞–π –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Å–æ–≤–µ—Ç—ã:
        1. –û—Ü–µ–Ω–∏ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å (–Ω–∏–∑–∫–∞—è/—Å—Ä–µ–¥–Ω—è—è/–≤—ã—Å–æ–∫–∞—è)
        2. –ß—Ç–æ –¥–µ–ª–∞–µ—Ç —Ö–æ—Ä–æ—à–æ
        3. –ß—Ç–æ –º–æ–∂–Ω–æ —É–ª—É—á—à–∏—Ç—å
        4. 3 –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã—Ö —Å–æ–≤–µ—Ç–∞ –¥–ª—è —Ä–æ—Å—Ç–∞

        –ò—Å–ø–æ–ª—å–∑—É–π —ç–º–æ–¥–∑–∏ –∏ –±—É–¥—å –ø–æ–∑–∏—Ç–∏–≤–Ω—ã–º!"""

        return get_gemini_response(prompt)

    except CustomUser.DoesNotExist:
        logger.warning(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å ID {user_id} –Ω–µ –Ω–∞–π–¥–µ–Ω –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ –ø—Ä–æ—Ñ–∏–ª—è")
        return "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω."
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –∞–Ω–∞–ª–∏–∑–∞ –ø—Ä–æ—Ñ–∏–ª—è: {e}")
        return f"–ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–æ—Ñ–∏–ª—å: {str(e)} üçä"


def generate_post_ideas(user_info: dict, tags: list = None) -> str:
    """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –∏–¥–µ–∏ –¥–ª—è –ø–æ—Å—Ç–æ–≤ –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ç—Ä–µ–Ω–¥–æ–≤ –∏ –∏–Ω—Ç–µ—Ä–µ—Å–æ–≤."""
    # –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –ø–æ–ø—É–ª—è—Ä–Ω—ã–µ —Ç–µ–≥–∏ –∏ —Ç–µ–º—ã
    available_tags = ['–ü—É—Ç–µ—à–µ—Å—Ç–≤–∏—è', '–ï–¥–∞', '–¢–µ—Ö–Ω–æ–ª–æ–≥–∏–∏', '–¢–≤–æ—Ä—á–µ—Å—Ç–≤–æ', '–°–ø–æ—Ä—Ç', '–ö–Ω–∏–≥–∏', '–ú—É–∑—ã–∫–∞', '–§–æ—Ç–æ']

    if tags:
        focus_tags = ', '.join(tags)
    else:
        focus_tags = '—Ä–∞–∑–Ω—ã–µ —Ç–µ–º—ã'

    prompt = f"""–°–≥–µ–Ω–µ—Ä–∏—Ä—É–π 5 –∫—Ä–µ–∞—Ç–∏–≤–Ω—ã—Ö –∏–¥–µ–π –¥–ª—è –ø–æ—Å—Ç–æ–≤ –≤ Chatty Orange –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_info.get('username', '–ê–Ω–æ–Ω–∏–º')}.

    –¢–µ–º–∞—Ç–∏–∫–∞: {focus_tags}
    –î–æ—Å—Ç—É–ø–Ω—ã–µ —Ç–µ–≥–∏: {', '.join(available_tags)}

    –§–æ—Ä–º–∞—Ç –æ—Ç–≤–µ—Ç–∞:
    üí° **–ò–¥–µ—è 1: [–ó–∞–≥–æ–ª–æ–≤–æ–∫]**
    üìù –û–ø–∏—Å–∞–Ω–∏–µ: [–ß—Ç–æ –Ω–∞–ø–∏—Å–∞—Ç—å]
    üì∏ –§–æ—Ç–æ: [–ß—Ç–æ —Å—Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—Ä–æ–≤–∞—Ç—å]
    üè∑Ô∏è –¢–µ–≥–∏: [–ü–æ–¥—Ö–æ–¥—è—â–∏–µ —Ç–µ–≥–∏]

    –ò–¥–µ–∏ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å:
    - –ò–Ω—Ç–µ—Ä–µ—Å–Ω—ã–º–∏ –∏ –≤–æ–≤–ª–µ–∫–∞—é—â–∏–º–∏
    - –õ–µ–≥–∫–∏–º–∏ –≤ —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏
    - –ü–æ–¥—Ö–æ–¥—è—â–∏–º–∏ –¥–ª—è —Å–æ—Ü–∏–∞–ª—å–Ω–æ–π —Å–µ—Ç–∏"""

    return get_gemini_response(prompt)


def analyze_sentiment(text: str) -> str:
    """–ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç —ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π —Ç–æ–Ω —Ç–µ–∫—Å—Ç–∞."""
    prompt = f"""–ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π —ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π —Ç–æ–Ω —ç—Ç–æ–≥–æ —Ç–µ–∫—Å—Ç–∞:
    "{text}"

    –û–ø—Ä–µ–¥–µ–ª–∏:
    1. –û–±—â–µ–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ (–ø–æ–∑–∏—Ç–∏–≤–Ω–æ–µ/–Ω–µ–π—Ç—Ä–∞–ª—å–Ω–æ–µ/–Ω–µ–≥–∞—Ç–∏–≤–Ω–æ–µ)
    2. –û—Å–Ω–æ–≤–Ω—ã–µ —ç–º–æ—Ü–∏–∏
    3. –£—Ä–æ–≤–µ–Ω—å —ç–Ω–µ—Ä–≥–∏–∏ (—Å–ø–æ–∫–æ–π–Ω—ã–π/—É–º–µ—Ä–µ–Ω–Ω—ã–π/—ç–Ω–µ—Ä–≥–∏—á–Ω—ã–π)

    –û—Ç–≤–µ—Ç—å –∫—Ä–∞—Ç–∫–æ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º —ç–º–æ–¥–∑–∏:
    –ù–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ: [—ç–º–æ–¥–∑–∏] [–æ–ø–∏—Å–∞–Ω–∏–µ]
    –≠–º–æ—Ü–∏–∏: [—Å–ø–∏—Å–æ–∫]
    –≠–Ω–µ—Ä–≥–∏—è: [—É—Ä–æ–≤–µ–Ω—å]"""

    return get_gemini_response(prompt)