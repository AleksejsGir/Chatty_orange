# Chatty_orange/Chatty_orange/settings.py

"""
Django settings for Chatty_orange project.

Generated by 'django-admin startproject' using Django 5.1.5.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

import os
from pathlib import Path
from dotenv import load_dotenv

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Загружаем переменные окружения из .env файла
load_dotenv(BASE_DIR / '.env')

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.getenv('SECRET_KEY', 'default-insecure-secret-key-for-dev')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = os.getenv('DEBUG', 'False').lower() in ('true', '1', 't')

# ALLOWED_HOSTS можно будет позже тоже вынести в .env
ALLOWED_HOSTS = []
if DEBUG:
    ALLOWED_HOSTS.extend(['localhost', '127.0.0.1'])


# Application definition

INSTALLED_APPS = [
    'jazzmin',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    # --- Наши приложения ---
    'users.apps.UsersConfig',
    'posts.apps.PostsConfig',
    'subscriptions.apps.SubscriptionsConfig',
    # 'core.apps.CoreConfig', # Если бы создали core приложение

    #--- Сторонние приложения ---
    'allauth',
    'allauth.account',
    'allauth.socialaccount',
    'django_bootstrap5',
    'debug_toolbar',
    'ckeditor',  # Добавляем CKEditor
    'feedback',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'debug_toolbar.middleware.DebugToolbarMiddleware', # Добавить для debug toolbar
    'allauth.account.middleware.AccountMiddleware', # Будет добавлено позже для allauth
]

ROOT_URLCONF = 'Chatty_orange.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates'], # Глобальная папка шаблонов
        'APP_DIRS': True, # Разрешаем поиск шаблонов внутри папок templates приложений
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request', # Обязателен для allauth и админки
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'Chatty_orange.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': os.getenv('DB_ENGINE', 'django.db.backends.sqlite3'),
        'NAME': os.getenv('DB_NAME', BASE_DIR / 'db.sqlite3'),
        'USER': os.getenv('DB_USER', ''),
        'PASSWORD': os.getenv('DB_PASSWORD', ''),
        'HOST': os.getenv('DB_HOST', 'localhost'),
        'PORT': os.getenv('DB_PORT', '5432'),
    }
}
# Доп. проверка на случай, если .env не задан и используется SQLite
if DATABASES['default']['ENGINE'] == 'django.db.backends.sqlite3' and not isinstance(DATABASES['default']['NAME'], Path):
     DATABASES['default']['NAME'] = BASE_DIR / DATABASES['default']['NAME']


# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator'},
    {'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator'},
    {'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator'},
    {'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator'},
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'ru-ru'
TIME_ZONE = 'Europe/Berlin' # Установлен часовой пояс
USE_I18N = True
USE_TZ = True # Оставляем поддержку часовых поясов


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = 'static/'
# Папки, где Django будет искать статику помимо папки static внутри приложений
STATICFILES_DIRS = [
    BASE_DIR / "static",
]
# Папка, куда будет собираться вся статика командой collectstatic (для production)
STATIC_ROOT = BASE_DIR / "staticfiles"


JAZZMIN_SETTINGS = {
    "site_title": "Chatty orange",  # Заголовок административной панели
    "site_header": "Chatty orange: Admin",  # Заголовок окна браузера
    "site_brand": "Chatty orange",  # Бренд сайта
    "welcome_sign": "Welcome to Chatty orange: Admin",  # Приветственное сообщение
    "copyright": "Chatty orange GmbH",  # Информация о копирайте
    "topmenu_links": [
        {"name": "Home", "url": "admin:index", "permissions": ["auth.view_user"]},
        # {"name": "Catalog", "url": "news:catalog", "new_window": True},
        {"name": "Support", "url": "https://google.com", "new_window": True},
    ],
    "usermenu_links": [
        {"name": "Support", "url": "https://github.com/farridav/django-jazzmin/issues", "new_window": True},
        {"model": "auth.user"}
    ],
    "show_sidebar": True,  # Показать боковую панель
    "navigation_expanded": True,  # Развернуть навигацию
    "hide_apps": [],  # Скрыть приложения
    "hide_models": [],  # Скрыть модели
    "default_icon_parents": "fas fa-chevron-circle-right",  # Иконка для родительских элементов
    "default_icon_children": "fas fa-circle",  # Иконка для дочерних элементов
    "related_modal_active": False,  # Включить модальные окна для связанных объектов
    "custom_css": None,  # Пользовательский CSS
    "custom_js": None,  # Пользовательский JS
    "use_google_fonts_cdn": True,  # Использовать Google Fonts CDN
    "show_ui_builder": False,  # Показать конструктор интерфейса
}

JAZZMIN_UI_TWEAKS = {
    "navbar_small_text": False,
    "footer_small_text": False,
    "body_small_text": True,
    "brand_small_text": False,
    "brand_colour": "navbar-secondary",
    "accent": "accent-pink",
    "navbar": "navbar-danger navbar-dark",
    "no_navbar_border": False,
    "navbar_fixed": True,
    "layout_boxed": False,
    "footer_fixed": False,
    "sidebar_fixed": True,
    "sidebar": "sidebar-light-primary",
    "sidebar_nav_small_text": False,
    "sidebar_disable_expand": False,
    "sidebar_nav_child_indent": False,
    "sidebar_nav_compact_style": True,
    "sidebar_nav_legacy_style": False,
    "sidebar_nav_flat_style": True,
    "theme": "cyborg",
    "dark_mode_theme": "cyborg",
    "button_classes": {
        "primary": "btn-primary",
        "secondary": "btn-secondary",
        "info": "btn-info",
        "warning": "btn-warning",
        "danger": "btn-danger",
        "success": "btn-success"
    }
}


# Media files (User Uploads like avatars)
# URL-префикс для доступа к медиа-файлам через браузер
MEDIA_URL = '/media/'
# Путь в файловой системе, где будут храниться загруженные файлы
MEDIA_ROOT = BASE_DIR / 'media'


# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# --- Custom User Model ---
AUTH_USER_MODEL = 'users.CustomUser' # Указываем нашу кастомную модель пользователя


# --- Email Configuration ---
# Используем вывод в консоль для отладки (сброс пароля и т.д.)
EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'
# TODO: Настроить реальный email backend для production (e.g., SMTP)
# EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.Chattyorangeeu@gmail.com'  # Например, 'smtp.gmail.com'
EMAIL_PORT = 587
EMAIL_USE_TLS = True
EMAIL_HOST_USER = 'Chattyorangeeu@gmail.com'
EMAIL_HOST_PASSWORD = 'pythondjango40'

# --- Authentication Settings ---
# URL, куда перенаправлять, если пользователь пытается получить доступ к странице,
# требующей логина, но не аутентифицирован. Имя URL-паттерна.
# LOGIN_URL = 'login' # Стандартное значение Django
LOGIN_URL = 'account_login' # Значение по умолчанию для django-allauth (установим позже)

# URL, куда перенаправлять после успешного входа (если не указан параметр 'next').
LOGIN_REDIRECT_URL = '/' # Перенаправляем на главную

# URL, куда перенаправлять после выхода.
LOGOUT_REDIRECT_URL = '/' # Перенаправляем на главную


# --- Django Allauth Settings (БУДУТ ДОБАВЛЕНЫ ПОЗЖЕ) ---
AUTHENTICATION_BACKENDS = [
    'django.contrib.auth.backends.ModelBackend', # Стандартный бэкенд Django
    'allauth.account.auth_backends.AuthenticationBackend', # Бэкенд allauth
]
SITE_ID = 1 # Требуется для allauth
ACCOUNT_EMAIL_REQUIRED = True
ACCOUNT_USERNAME_REQUIRED = True # Или False, если логин только по email
ACCOUNT_AUTHENTICATION_METHOD = 'username_email' # или 'email' или 'username'
ACCOUNT_EMAIL_VERIFICATION = 'optional' # или 'mandatory' или 'none'
ACCOUNT_LOGIN_ON_PASSWORD_RESET = True
ACCOUNT_LOGOUT_ON_GET = False # Выход только через POST для безопасности
ACCOUNT_EMAIL_SUBJECT_PREFIX = '[Chatty] ' # Префикс для тем писем

     #CKEditor
CKEDITOR_JQUERY_URL = 'https://ajax.googleapis.com/ajax/libs/jquery/3.6.0/jquery.min.js'
CKEDITOR_UPLOAD_PATH = 'uploads/'
CKEDITOR_IMAGE_BACKEND = 'pillow'
CKEDITOR_BASEPATH = "/static/ckeditor/ckeditor/"
CKEDITOR_RESTRICT_BY_USER = True
CKEDITOR_FORCE_JPEG_COMPRESSION = True
CKEDITOR_FILENAME_GENERATOR = 'utils.get_filename'

# Указываем использовать последнюю версию CKEditor
CKEDITOR_CONFIGS = {
    'default': {
        'toolbar': 'Custom',
        'toolbar_Custom': [
            ['Bold', 'Italic', 'Underline', 'Strike', 'Subscript', 'Superscript'],
            ['TextColor', 'BGColor'],
            ['JustifyLeft', 'JustifyCenter', 'JustifyRight', 'JustifyBlock'],
            ['NumberedList', 'BulletedList', '-', 'Outdent', 'Indent'],
            ['Link', 'Unlink'],
            ['RemoveFormat', 'Source'],
            ['Styles', 'Format', 'Font', 'FontSize'],
            ['Image', 'Table'],
            ['Maximize']
        ],
        'width': '100%',
        'height': 300,
        'removePlugins': 'stylesheetparser',
        'allowedContent': True,
        # Добавляем эту строку для указания версии
        'customConfig': '/static/ckeditor/ckeditor/config.js?version=4.25.1-lts',
    },
}

# SESSION_SAVE_EVERY_REQUEST = True


# --- Django Debug Toolbar Settings (если используется) ---
# INTERNAL_IPS = [
#     "127.0.0.1",
# ]

ACCOUNT_FORMS = {
    'signup': 'users.forms.CustomSignupForm',
}

CKEDITOR_CONFIGS = {
    'default': {
        'toolbar': 'Custom',
        'toolbar_Custom': [
            ['Bold', 'Italic', 'Underline', 'Strike', 'Subscript', 'Superscript'],
            ['TextColor', 'BGColor'],
            ['JustifyLeft', 'JustifyCenter', 'JustifyRight', 'JustifyBlock'],
            ['NumberedList', 'BulletedList', '-', 'Outdent', 'Indent'],
            ['Link', 'Unlink'],
            ['RemoveFormat', 'Source'],
            ['Image', 'Table'],
            ['Maximize']
        ],
        'width': '100%',
        'height': 300,
        'extraPlugins': ','.join([
            'div',
            'autolink',
            'widget',
            'lineutils',
            'clipboard',
        ]),
        # Добавьте параметр для явного указания версии
        'skin': 'moono-lisa',
        'contentsCss': '/static/ckeditor/ckeditor/contents.css',
    },
}

# <!-- TODO: Настроить STATIC_ROOT для production. -->
# <!-- TODO: Настроить реальный EMAIL_BACKEND для production. -->
# <!-- TODO: Настроить INTERNAL_IPS и middleware для django-debug-toolbar. -->
